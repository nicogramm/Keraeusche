name: Build and Upload Resourcepack

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - 'v*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Create Release
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Zip Release
      run: |
        printf "ðŸ“¦ Creating zip archive...\n"
        zip -r "SuperCooleSounds.zip" . -x "*.md *.git*" || { printf "\nâ›” Unable to create zip archive.\n"; exit 1;  }
        printf "âœ” Successfully created zip archive.\n"
    - name: Calculate checksum
      run: |
        printf "ðŸ§® Calculating sha-1 hash...\n"
        sha1sum SuperCooleSounds.zip > SuperCooleSounds.zip.sha1 || { printf "\nâ›” Unable to calculate sha-1 hash.\n"; exit 1;  }
        printf "âœ” Successfully calculated sha-1 hash.\n"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: ${{ github.ref }}
        # The name of the release. For example, `Release v1.0.1`
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload resourcepack zip
      id: upload-resourcepack-zip 
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./SuperCooleSounds.zip
        asset_name: SuperCooleSounds.zip
        asset_content_type: application/zip
    - name: Upload sha-1 hash
      id: upload-sha1-hash
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./SuperCooleSounds.zip.sha1
        asset_name: SuperCooleSounds.zip.sha1
        asset_content_type: text/plain

